<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>SafeCampus â€” Demo</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <style>
    body{font-family:system-ui;margin:0;padding:14px;background:#f6f8fb}
    header{display:flex;justify-content:space-between;align-items:center;padding:8px 12px}
    h1{margin:0;font-size:20px}
    nav a{color:#0366d6;text-decoration:none;margin-right:8px}
    .card{background:#fff;padding:12px;border-radius:8px;box-shadow:0 6px 18px rgba(15,20,30,0.06);margin:12px 0}
    .chat-window{height:200px;overflow:auto;border:1px solid #eee;padding:8px;border-radius:6px;background:#fafafa}
    .msg{margin:6px 0;padding:8px;border-radius:6px;max-width:80%}
    .msg.user{background:#dcf8c6;margin-left:auto}
    .msg.bot{background:#fff}
    button{padding:8px 10px;border-radius:6px;border:1px solid #ccc;background:#fff;cursor:pointer}
    input[type=text], input[type=search]{padding:8px;border-radius:6px;border:1px solid #ccc;width:calc(100% - 110px)}
    #story-choices button{display:block;margin:6px 0;width:100%}
    footer{font-size:13px;color:#556;margin-top:12px}
    @media(min-width:900px){main{max-width:900px;margin:0 auto}}
  </style>
</head>
<body>
  <header>
    <h1>SafeCampus â€” Demo</h1>
    <nav>
      <a href="#weather">Weather</a> |
      <a href="#map">Map</a> |
      <a href="#game">Game</a> |
      <a href="#quiz">Quiz</a> |
      <a href="#chat">Chat</a>
    </nav>
  </header>

  <main>
    <section id="weather" class="card">
      <h2>Weather Forecast</h2>
      <div id="weather-widget">
        <div id="current-weather">Loading weatherâ€¦</div>
        <div id="forecast" style="margin-top:8px"></div>
        <div style="margin-top:10px;display:flex;gap:8px;align-items:center">
          <input id="city-input" type="search" placeholder="Or search city (e.g. Mumbai)" />
          <button id="city-search">Search</button>
        </div>
      </div>
    </section>

    <section id="map-section" class="card">
      <h2>Your Location Map</h2>
      <div id="map" style="height:320px;"></div>
    </section>

    <section id="game" class="card">
      <h2>Story Game â€” Choose Your Path</h2>
      <div id="story-area"></div>
      <div id="story-choices" style="margin-top:8px"></div>
      <button id="restart-game" style="display:none;margin-top:8px">Restart</button>
    </section>

    <section id="quiz" class="card">
      <h2>Quick Safety Quiz</h2>
      <div id="quiz-area"></div>
      <div id="quiz-result" style="margin-top:8px"></div>
    </section>

    <section id="chat" class="card">
      <h2>AI Chatbox (local demo)</h2>
      <div id="chat-window" class="chat-window"></div>
      <div style="display:flex;gap:8px;margin-top:8px">
        <input id="chat-input" type="text" placeholder="Ask about campus safety, weather, or the appâ€¦" />
        <button id="chat-send">Send</button>
      </div>
    </section>

    <section id="scoreboard" class="card">
      <h2>Scoreboard</h2>
      <div id="scores-list"></div>
    </section>
  </main>

  <footer>
    <small>SafeCampus Demo â€” good luck SIH! ðŸ’ª</small>
  </footer>

  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
  <script>
    const CONFIG = {
      OPENWEATHER_KEY: "abcd1234567xyz"
    };

    // // ===== WEATHER =====
async function fetchWeatherByCoords(lat, lon){
  const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${CONFIG.OPENWEATHER_KEY}&units=metric`);
  return res.json();
}
async function fetchForecastByCoords(lat, lon){
  const res = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${CONFIG.OPENWEATHER_KEY}&units=metric`);
  return res.json();
}
function showWeather(data){
  const cur = document.getElementById("current-weather");
  cur.innerHTML = `${data.name}: ${data.weather[0].description}, ${data.main.temp}Â°C`;
}
function showForecast(data){
  const f = document.getElementById("forecast");
  f.innerHTML = "";
  for(let i=0;i<data.list.length;i+=8){
    const d = data.list[i];
    const div = document.createElement("div");
    div.textContent = `${d.dt_txt.split(" ")[0]}: ${d.main.temp}Â°C, ${d.weather[0].description}`;
    f.appendChild(div);
  }
}
navigator.geolocation.getCurrentPosition(async pos=>{
  const w = await fetchWeatherByCoords(pos.coords.latitude,pos.coords.longitude);
  const f = await fetchForecastByCoords(pos.coords.latitude,pos.coords.longitude);
  showWeather(w); showForecast(f);
});
document.getElementById("city-search").onclick=async()=>{
  const city=document.getElementById("city-input").value;
  if(!city) return;
  const wres=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${CONFIG.OPENWEATHER_KEY}&units=metric`);
  const fres=await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${CONFIG.OPENWEATHER_KEY}&units=metric`);
  const w = await wres.json(); const f = await fres.json();
  showWeather(w); showForecast(f);
};

// ===== MAP =====
const map = L.map('map').setView([0,0], 13);
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
  attribution:'&copy; OpenStreetMap contributors'
}).addTo(map);
navigator.geolocation.getCurrentPosition(pos=>{
  map.setView([pos.coords.latitude,pos.coords.longitude],13);
  L.marker([pos.coords.latitude,pos.coords.longitude]).addTo(map).bindPopup("You are here").openPopup();
});

// ===== STORY GAME =====
const storyArea=document.getElementById("story-area");
const storyChoices=document.getElementById("story-choices");
const restartBtn=document.getElementById("restart-game");
let storyState=0;
const storyData=[
  {text:"You see a dark path. Go left or right?",choices:[{text:"Left",next:1},{text:"Right",next:2}]},
  {text:"A river blocks you. Swim or wait?",choices:[{text:"Swim",next:3},{text:"Wait",next:4}]},
  {text:"A bridge ahead. Cross or return?",choices:[{text:"Cross",next:4},{text:"Return",next:3}]},
  {text:"You win!",choices:[]},{text:"Try again.",choices:[]}
];
function renderStory(){
  const s = storyData[storyState];
  storyArea.textContent = s.text;
  storyChoices.innerHTML="";
  if(s.choices.length===0){restartBtn.style.display="block";return;}
  s.choices.forEach(c=>{
    const btn=document.createElement("button");
    btn.textContent=c.text;
    btn.onclick=()=>{storyState=c.next;renderStory();}
    storyChoices.appendChild(btn);
  });
}
restartBtn.onclick=()=>{storyState=0;restartBtn.style.display="none";renderStory();}
renderStory();

// ===== QUIZ =====
const quizArea=document.getElementById("quiz-area");
const quizResult=document.getElementById("quiz-result");
const quizData=[
  {q:"Safe to walk alone at night?",a:["No","Yes"],correct:0},
  {q:"Wear helmet on bike?",a:["Yes","No"],correct:0}
];
let quizIndex=0,score=0;
function renderQuiz(){
  if(quizIndex>=quizData.length){quizResult.textContent=`Score: ${score}/${quizData.length}`;return;}
  const q = quizData[quizIndex];
  quizArea.textContent=q.q;
  quizArea.innerHTML="";
  q.a.forEach((ans,i)=>{
    const btn=document.createElement("button");
    btn.textContent=ans;
    btn.onclick=()=>{
      if(i===q.correct)score++;
      quizIndex++; renderQuiz();
    }
    quizArea.appendChild(btn);
  });
}
renderQuiz();

// ===== CHAT =====
const chatWindow=document.getElementById("chat-window");
const chatInput=document.getElementById("chat-input");
const chatSend=document.getElementById("chat-send");
chatSend.onclick=()=>{
  const msg=document.createElement("div");
  msg.textContent=chatInput.value;
  msg.className="msg user";
  chatWindow.appendChild(msg);
  let reply="I don't understand.";
  const text=chatInput.value.toLowerCase();
  if(text.includes("hi")) reply="Hello!";
  else if(text.includes("weather")) reply="Check the weather section above.";
  else if(text.includes("quiz")) reply="Try the safety quiz above!";
  const bot=document.createElement("div");
  bot.textContent=reply;
  bot.className="msg bot";
  chatWindow.appendChild(bot);
  chatInput.value="";
  chatWindow.scrollTop=chatWindow.scrollHeight;
};

// ===== SCOREBOARD =====
const scoresList=document.getElementById("scores-list");
const scores=[{name:"Alice",score:2},{name:"Bob",score:1}];
scores.forEach(s=>{
  const div=document.createElement("div");
  div.textContent=`${s.name}: ${s.score}`;
  scoresList.appendChild(div);
});

    // (Copy-paste all the JS I sent you previously here)
  </script>
</body>
</html>
